{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","target","rel","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","valueTitleMovie","setValueTitleMovie","moviePreview","setMovePreview","load","setLoad","hasError","setHasError","onSubmit","event","preventDefault","htmlFor","value","onChange","type","id","placeholder","disabled","onClick","query","trim","fetch","then","res","json","catch","Response","Error","movieData","Title","Plot","Poster","imdbID","finally","App","setMovies","find","film","currentMovies","handleAddedMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f10241dd.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl === 'N/A' ? (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            ) : (\n              movie.imgUrl\n            )}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a\n            href={movie.imdbUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            data-cy=\"movieURL\"\n          >\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = React.memo(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n));\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [valueTitleMovie, setValueTitleMovie] = useState('');\n  const [moviePreview, setMovePreview] = useState<Movie | null>(null);\n  const [load, setLoad] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleChangeTitleMovie = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setValueTitleMovie(event.target.value);\n    setHasError(false);\n  };\n\n  const handleClickSearchMovie = () => {\n    setLoad(true);\n    getMovie(valueTitleMovie.trim())\n      .then(movieData => {\n        if (movieData.Response === 'False') {\n          setHasError(true);\n\n          return;\n        }\n\n        setHasError(false);\n\n        setMovePreview({\n          title: movieData.Title,\n          description: movieData.Plot,\n          imgUrl: movieData.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n          imdbId: movieData.imdbID,\n        });\n      })\n      .finally(() => setLoad(false));\n  };\n\n  const handleClickAddMovie = (movie: Movie) => {\n    onAddMovie(movie);\n    setMovePreview(null);\n    setValueTitleMovie('');\n  };\n\n  return (\n    <>\n      <form onSubmit={event => event.preventDefault()} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={valueTitleMovie}\n              onChange={handleChangeTitleMovie}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${hasError && 'is-danger'}`}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button ${load ? 'is-loading' : 'is-light'}`}\n              disabled={!valueTitleMovie}\n              onClick={handleClickSearchMovie}\n            >\n              {moviePreview ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {moviePreview && (\n            <div className=\"control\">\n              <button\n                onClick={() => handleClickAddMovie(moviePreview)}\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {moviePreview && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={moviePreview} />\n        </div>\n      )}\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=687680d0';\n\nexport function getMovie(query: string) {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddedMovie = (movie: Movie) => {\n    if (movies.find(film => film.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={(movie) => handleAddedMovie(movie)} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}